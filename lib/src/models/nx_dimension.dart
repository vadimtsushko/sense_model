// Generated by Dogma Dart. DO NOT MODIFY!
// 2017-01-17 11:59:03.825591

library sense_model.src.models.nx_dimension;

//---------------------------------------------------------------------
// Imports
//---------------------------------------------------------------------

import 'package:dogma_convert/serialize.dart';
import 'nx_inline_dimension_def.dart';
import 'nx_other_total_spec_prop.dart';
import 'nx_value_expr.dart';

//---------------------------------------------------------------------
// Library contents
//---------------------------------------------------------------------

class NxDimension {
  /// Should be set to `dimension` simetimes
  @Serialize.field('type', optional: true)
  String type;

  /// Refers to a dimension stored in the library.
  @Serialize.field('qLibraryId')
  String qLibraryId;

  /// Refers to a dimension stored in the hypercube.
  @Serialize.field('qDef', optional: true)
  NxInlineDimensionDef qDef;

  /// If set to true, no null values are returned.
  @Serialize.field('qNullSuppression', optional: true)
  bool qNullSuppression;

  /// Not documented
  @Serialize.field('autoSort', optional: true)
  bool autoSort;

  /// If set to true, all dimension values are shown.
  @Serialize.field('qShowAll', optional: true)
  bool qShowAll;

  /// This property is used when some dimension limits are set.
  @Serialize.field('qOtherLabel', optional: true)
  String qOtherLabel;

  /// If this property is set, the total of the calculated values is returned.
  @Serialize.field('qTotalLabel', optional: true)
  String qTotalLabel;

  /// Sets the dimension limits. Each dimension of a hypercube is configured
  /// separately. Just stub for now. Should add type in future
  @Serialize.field('qOtherTotalSpec', optional: true)
  NxOtherTotalSpecProp qOtherTotalSpec;

  /// Specifies a calculation condition, which must be fulfilled for the measure
  /// to be calculated
  @Serialize.field('qCalcCond', optional: true)
  NxValueExpr qCalcCond;
}
