// Generated by Dogma Dart. DO NOT MODIFY!

library sense_model.src.unmodifiable_model_views.unmodifiable_nx_options_view;

//---------------------------------------------------------------------
// Standard libraries
//---------------------------------------------------------------------

import 'dart:collection';

//---------------------------------------------------------------------
// Imports
//---------------------------------------------------------------------

import 'package:sense_model/models.dart';

//---------------------------------------------------------------------
// Library contents
//---------------------------------------------------------------------

/// An unmodifiable view over an instance of [NxOptions].
class UnmodifiableNxOptionsView implements NxOptions {
  final NxOptions _model;
  final UnmodifiableMapView _nullMode;

  factory UnmodifiableNxOptionsView(NxOptions model) {
    var nullMode = new UnmodifiableMapView(model.nullMode);
    return new UnmodifiableNxOptionsView._internal(model, nullMode);
  }

  UnmodifiableNxOptionsView._internal(this._model, this._nullMode);

  @override
  String get title => _model.title;
  set title(String value) {
    throw new UnsupportedError('Cannot modify an unmodifiable NxOptions');
  }

  @override
  bool get showTitles => _model.showTitles;
  set showTitles(bool value) {
    throw new UnsupportedError('Cannot modify an unmodifiable NxOptions');
  }

  @override
  String get subtitle => _model.subtitle;
  set subtitle(String value) {
    throw new UnsupportedError('Cannot modify an unmodifiable NxOptions');
  }

  @override
  String get footnote => _model.footnote;
  set footnote(String value) {
    throw new UnsupportedError('Cannot modify an unmodifiable NxOptions');
  }

  @override
  NxBarGrouping get barGrouping => _model.barGrouping;
  set barGrouping(NxBarGrouping value) {
    throw new UnsupportedError('Cannot modify an unmodifiable NxOptions');
  }

  @override
  NxDonut get donut => _model.donut;
  set donut(NxDonut value) {
    throw new UnsupportedError('Cannot modify an unmodifiable NxOptions');
  }

  @override
  NxDataPoint get dataPoint => _model.dataPoint;
  set dataPoint(NxDataPoint value) {
    throw new UnsupportedError('Cannot modify an unmodifiable NxOptions');
  }

  @override
  NxLegend get legend => _model.legend;
  set legend(NxLegend value) {
    throw new UnsupportedError('Cannot modify an unmodifiable NxOptions');
  }

  @override
  NxDimensionAxis get dimensionAxis => _model.dimensionAxis;
  set dimensionAxis(NxDimensionAxis value) {
    throw new UnsupportedError('Cannot modify an unmodifiable NxOptions');
  }

  @override
  NxMeasureAxis get measureAxis => _model.measureAxis;
  set measureAxis(NxMeasureAxis value) {
    throw new UnsupportedError('Cannot modify an unmodifiable NxOptions');
  }

  @override
  String get orientation => _model.orientation;
  set orientation(String value) {
    throw new UnsupportedError('Cannot modify an unmodifiable NxOptions');
  }

  @override
  QHyperCubeDef get qHyperCubeDef => _model.qHyperCubeDef;
  set qHyperCubeDef(QHyperCubeDef value) {
    throw new UnsupportedError('Cannot modify an unmodifiable NxOptions');
  }

  @override
  Map get nullMode => _nullMode;
  set nullMode(Map value) {
    throw new UnsupportedError('Cannot modify an unmodifiable NxOptions');
  }
}
