// Generated by Dogma Dart. DO NOT MODIFY!

library sense_model.src.models.iv_measure;

//---------------------------------------------------------------------
// Imports
//---------------------------------------------------------------------

import 'package:dogma_convert/serialize.dart';
import 'iv_filter_param.dart';
import 'nx_measure_series.dart';

//---------------------------------------------------------------------
// Library contents
//---------------------------------------------------------------------

class IvMeasure {
  /// Статическая ли это мера
  @Serialize.field('isStatic')
  bool isStatic;

  /// Код поля (если измерение статическое), либо название динамической таблицы,
  /// откуда будет получен текущий код поля
  @Serialize.field('key')
  String key;

  /// Дополнительный параметр для выбора динамической меры
  @Serialize.field('param', optional: true)
  String param;

  /// Необходимо проверить условие отображения колонки
  @Serialize.field('conditional', optional: true)
  bool conditional;

  /// If set to true, percentage values are returned instead of absolute numbers.
  @Serialize.field('qRelative', optional: true)
  bool qRelative;

  /// Режим накопления (0 по умолчанию, 1 - полное накопление)
  @Serialize.field('qAccumulate', optional: true)
  int qAccumulate;
  @Serialize.field('backgroundColor', optional: true)
  String backgroundColor;
  @Serialize.field('fontColor', optional: true)
  String fontColor;

  /// Показывать колонку (рантайм параметр)
  @Serialize.field('visible', optional: true)
  bool visible;

  /// Дополнительные параметры меры для комбочарта
  @Serialize.field('series', optional: true)
  NxMeasureSeries series;

  /// Направление сортировки (когда мера используется как мера для сортировки)
  @Serialize.field('sortOrder', optional: true)
  int sortOrder;

  /// Дополнительный фильтр (используется только для динамических мер)
  @Serialize.field('filters', optional: true)
  List<IvFilterParam> filters;
}
