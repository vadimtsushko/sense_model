// Generated by Dogma Dart. DO NOT MODIFY!

library sense_model.src.unmodifiable_model_views.unmodifiable_chart_definition_view;

//---------------------------------------------------------------------
// Standard libraries
//---------------------------------------------------------------------

import 'dart:collection';

//---------------------------------------------------------------------
// Imports
//---------------------------------------------------------------------

import 'package:sense_model/models.dart';

//---------------------------------------------------------------------
// Library contents
//---------------------------------------------------------------------

/// An unmodifiable view over an instance of [ChartDefinition].
class UnmodifiableChartDefinitionView implements ChartDefinition {
  final ChartDefinition _model;
  final UnmodifiableListView<IvDimension> _dimensions;
  final UnmodifiableListView<String> _hierarchySelectors;
  final UnmodifiableListView<IvMeasure> _measures;
  final UnmodifiableMapView _nullMode;
  final UnmodifiableListView<int> _interColumnSortOrder;

  factory UnmodifiableChartDefinitionView(ChartDefinition model) {
    var dimensions = new UnmodifiableListView<IvDimension>(model.dimensions);
    var hierarchySelectors =
        new UnmodifiableListView<String>(model.hierarchySelectors);
    var measures = new UnmodifiableListView<IvMeasure>(model.measures);
    var nullMode = new UnmodifiableMapView(model.nullMode);
    var interColumnSortOrder =
        new UnmodifiableListView<int>(model.interColumnSortOrder);
    return new UnmodifiableChartDefinitionView._internal(model, dimensions,
        hierarchySelectors, measures, nullMode, interColumnSortOrder);
  }

  UnmodifiableChartDefinitionView._internal(
      this._model,
      this._dimensions,
      this._hierarchySelectors,
      this._measures,
      this._nullMode,
      this._interColumnSortOrder);

  @override
  String get chartType => _model.chartType;
  set chartType(String value) {
    throw new UnsupportedError('Cannot modify an unmodifiable ChartDefinition');
  }

  @override
  String get chartId => _model.chartId;
  set chartId(String value) {
    throw new UnsupportedError('Cannot modify an unmodifiable ChartDefinition');
  }

  @override
  String get measuresSelector => _model.measuresSelector;
  set measuresSelector(String value) {
    throw new UnsupportedError('Cannot modify an unmodifiable ChartDefinition');
  }

  @override
  String get title => _model.title;
  set title(String value) {
    throw new UnsupportedError('Cannot modify an unmodifiable ChartDefinition');
  }

  @override
  bool get showTitles => _model.showTitles;
  set showTitles(bool value) {
    throw new UnsupportedError('Cannot modify an unmodifiable ChartDefinition');
  }

  @override
  String get subtitle => _model.subtitle;
  set subtitle(String value) {
    throw new UnsupportedError('Cannot modify an unmodifiable ChartDefinition');
  }

  @override
  String get footnote => _model.footnote;
  set footnote(String value) {
    throw new UnsupportedError('Cannot modify an unmodifiable ChartDefinition');
  }

  @override
  NxBarGrouping get barGrouping => _model.barGrouping;
  set barGrouping(NxBarGrouping value) {
    throw new UnsupportedError('Cannot modify an unmodifiable ChartDefinition');
  }

  @override
  NxDonut get donut => _model.donut;
  set donut(NxDonut value) {
    throw new UnsupportedError('Cannot modify an unmodifiable ChartDefinition');
  }

  @override
  NxDataPoint get dataPoint => _model.dataPoint;
  set dataPoint(NxDataPoint value) {
    throw new UnsupportedError('Cannot modify an unmodifiable ChartDefinition');
  }

  @override
  NxLegend get legend => _model.legend;
  set legend(NxLegend value) {
    throw new UnsupportedError('Cannot modify an unmodifiable ChartDefinition');
  }

  @override
  NxDimensionAxis get dimensionAxis => _model.dimensionAxis;
  set dimensionAxis(NxDimensionAxis value) {
    throw new UnsupportedError('Cannot modify an unmodifiable ChartDefinition');
  }

  @override
  NxMeasureAxis get measureAxis => _model.measureAxis;
  set measureAxis(NxMeasureAxis value) {
    throw new UnsupportedError('Cannot modify an unmodifiable ChartDefinition');
  }

  @override
  bool get suppressZero => _model.suppressZero;
  set suppressZero(bool value) {
    throw new UnsupportedError('Cannot modify an unmodifiable ChartDefinition');
  }

  @override
  bool get suppressMissing => _model.suppressMissing;
  set suppressMissing(bool value) {
    throw new UnsupportedError('Cannot modify an unmodifiable ChartDefinition');
  }

  @override
  int get sortbyYValue => _model.sortbyYValue;
  set sortbyYValue(int value) {
    throw new UnsupportedError('Cannot modify an unmodifiable ChartDefinition');
  }

  @override
  String get orientation => _model.orientation;
  set orientation(String value) {
    throw new UnsupportedError('Cannot modify an unmodifiable ChartDefinition');
  }

  @override
  List<IvDimension> get dimensions => _dimensions;
  set dimensions(List<IvDimension> value) {
    throw new UnsupportedError('Cannot modify an unmodifiable ChartDefinition');
  }

  @override
  List<String> get hierarchySelectors => _hierarchySelectors;
  set hierarchySelectors(List<String> value) {
    throw new UnsupportedError('Cannot modify an unmodifiable ChartDefinition');
  }

  @override
  List<IvMeasure> get measures => _measures;
  set measures(List<IvMeasure> value) {
    throw new UnsupportedError('Cannot modify an unmodifiable ChartDefinition');
  }

  @override
  Map get nullMode => _nullMode;
  set nullMode(Map value) {
    throw new UnsupportedError('Cannot modify an unmodifiable ChartDefinition');
  }

  @override
  List<int> get interColumnSortOrder => _interColumnSortOrder;
  set interColumnSortOrder(List<int> value) {
    throw new UnsupportedError('Cannot modify an unmodifiable ChartDefinition');
  }
}
