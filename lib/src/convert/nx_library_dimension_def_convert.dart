// Generated by Dogma Dart. DO NOT MODIFY!

library sense_model.src.convert.nx_library_dimension_def_convert;

//---------------------------------------------------------------------
// Standard libraries
//---------------------------------------------------------------------

import 'dart:convert';

//---------------------------------------------------------------------
// Imports
//---------------------------------------------------------------------

import 'package:dogma_convert/convert.dart';
import 'package:sense_model/models.dart';

//---------------------------------------------------------------------
// Library contents
//---------------------------------------------------------------------

/// A [ModelDecoder] for [NxLibraryDimensionDef].
class NxLibraryDimensionDefDecoder extends Converter<Map, NxLibraryDimensionDef>
    implements ModelDecoder<NxLibraryDimensionDef> {
  @override
  NxLibraryDimensionDef create() => new NxLibraryDimensionDef();
  @override
  NxLibraryDimensionDef convert(Map input, [NxLibraryDimensionDef model]) {
    model ??= create();

    model.qFieldDefs = input['qFieldDefs'];
    model.qFieldLabels = input['qFieldLabels'];
    model.qGrouping = input['qGrouping'];
    return model;
  }
}

/// A [ModelEncoder] for [NxLibraryDimensionDef].
class NxLibraryDimensionDefEncoder extends Converter<NxLibraryDimensionDef, Map>
    implements ModelEncoder<NxLibraryDimensionDef> {
  @override
  Map convert(NxLibraryDimensionDef input) {
    var model = {};

    var qFieldDefs = input.qFieldDefs;
    if (qFieldDefs != null) {
      model['qFieldDefs'] = qFieldDefs;
    }
    var qFieldLabels = input.qFieldLabels;
    if (qFieldLabels != null) {
      model['qFieldLabels'] = qFieldLabels;
    }
    var qGrouping = input.qGrouping;
    if (qGrouping != null) {
      model['qGrouping'] = qGrouping;
    }

    return model;
  }
}
