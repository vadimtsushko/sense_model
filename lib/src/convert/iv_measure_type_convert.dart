// Generated by Dogma Dart. DO NOT MODIFY!
// 2016-12-06 16:43:12.078728

library sense_model.src.convert.iv_measure_type_convert;

//---------------------------------------------------------------------
// Standard libraries
//---------------------------------------------------------------------

import 'dart:convert';

//---------------------------------------------------------------------
// Imports
//---------------------------------------------------------------------

import 'package:dogma_convert/convert.dart';
import 'package:sense_model/models.dart';
import 'locale_display_name_convert.dart';

//---------------------------------------------------------------------
// Library contents
//---------------------------------------------------------------------

/// A [ModelDecoder] for [IvMeasureType].
class IvMeasureTypeDecoder extends Converter<Map, IvMeasureType>
    implements ModelDecoder<IvMeasureType> {
  final Converter<Map, LocaleDisplayName> _localeDisplayNameDecoder;
  IvMeasureTypeDecoder()
      : _localeDisplayNameDecoder = new LocaleDisplayNameDecoder();
  IvMeasureTypeDecoder.using(this._localeDisplayNameDecoder);
  @override
  IvMeasureType create() => new IvMeasureType();
  @override
  IvMeasureType convert(Map input, [IvMeasureType model]) {
    model ??= create();

    model.key = input['key'];
    model.displayName = input['displayName'];
    var localeDisplayName = input['localeDisplayName'];
    if (localeDisplayName != null) {
      model.localeDisplayName =
          _localeDisplayNameDecoder.convert(localeDisplayName);
    }
    model.format = input['format'];
    model.isPlan = input['isPlan'];
    return model;
  }
}

/// A [ModelEncoder] for [IvMeasureType].
class IvMeasureTypeEncoder extends Converter<IvMeasureType, Map>
    implements ModelEncoder<IvMeasureType> {
  final Converter<LocaleDisplayName, Map> _localeDisplayNameEncoder;
  IvMeasureTypeEncoder()
      : _localeDisplayNameEncoder = new LocaleDisplayNameEncoder();
  IvMeasureTypeEncoder.using(this._localeDisplayNameEncoder);
  @override
  Map convert(IvMeasureType input) {
    var model = {};

    model['key'] = input.key;
    model['displayName'] = input.displayName;
    var localeDisplayName = input.localeDisplayName;
    if (localeDisplayName != null) {
      model['localeDisplayName'] =
          _localeDisplayNameEncoder.convert(localeDisplayName);
    }
    var format = input.format;
    if (format != null) {
      model['format'] = format;
    }
    var isPlan = input.isPlan;
    if (isPlan != null) {
      model['isPlan'] = isPlan;
    }

    return model;
  }
}
